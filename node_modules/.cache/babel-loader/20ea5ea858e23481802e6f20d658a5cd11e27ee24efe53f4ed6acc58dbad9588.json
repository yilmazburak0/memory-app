{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\burakyilmaz17\\\\Desktop\\\\memory-app-start\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport MemoryCard from './components/MemoryCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardList = [{\n  \"path\": \"/img/1.jpeg\",\n  matched: false\n}, {\n  \"path\": \"/img/2.jpeg\",\n  matched: false\n}, {\n  \"path\": \"/img/3.jpeg\",\n  matched: false\n}, {\n  \"path\": \"/img/4.jpeg\",\n  matched: false\n}, {\n  \"path\": \"/img/5.jpeg\",\n  matched: false\n}, {\n  \"path\": \"/img/6.jpeg\",\n  matched: false\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [selectedOne, setSelectedOne] = useState(null);\n  const [selectedTwo, setSelectedTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  const prepareCards = () => {\n    const sortedCards = [...cardList, ...cardList].sort(() => 0.5 - Math.random()).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(sortedCards);\n  };\n  useEffect(() => {\n    prepareCards();\n  }, []);\n  const setSelected = card => {\n    selectedOne ? setSelectedTwo(card) : setSelectedOne(card);\n  };\n  useEffect(() => {\n    console.log(\"change\");\n    // if (selectedOne === selectedTwo) {\n    //   setDisabled(true);\n    //   cards.map(card => {\n    //     if (card === selectedOne) {\n    //       return ({...card,matched:true})\n    //     }\n    //     else{ return card }\n    //   })\n    // }\n  }, [selectedOne, selectedTwo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: prepareCards,\n      children: \"Oyunu Ba\\u015Flat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(MemoryCard, {\n        card: card,\n        disabled: disabled,\n        setSelected: setSelected\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bX1ksxCJbW5Rof3/4J9kcqTZTyU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","MemoryCard","jsxDEV","_jsxDEV","cardList","matched","App","_s","cards","setCards","selectedOne","setSelectedOne","selectedTwo","setSelectedTwo","disabled","setDisabled","prepareCards","sortedCards","sort","Math","random","map","card","id","setSelected","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/burakyilmaz17/Desktop/memory-app-start/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport MemoryCard from './components/MemoryCard';\n\nconst cardList = [\n  { \"path\": \"/img/1.jpeg\",matched:false },\n  { \"path\": \"/img/2.jpeg\",matched:false },\n  { \"path\": \"/img/3.jpeg\",matched:false },\n  { \"path\": \"/img/4.jpeg\",matched:false },\n  { \"path\": \"/img/5.jpeg\",matched:false },\n  { \"path\": \"/img/6.jpeg\",matched:false }\n];\n\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [selectedOne, setSelectedOne] = useState(null);\n  const [selectedTwo, setSelectedTwo] = useState(null);\n  const [disabled,setDisabled] = useState(false);\n\n  const prepareCards = () => {\n\n    const sortedCards = [...cardList, ...cardList]\n      .sort(() => 0.5 - Math.random())\n      .map((card) => ({ ...card, id: Math.random() }));\n\n    setCards(sortedCards);\n  }\n\n  useEffect(() => {\n    prepareCards();\n  }, []);\n\n  const setSelected = (card) => {\n    selectedOne ? setSelectedTwo(card) : setSelectedOne(card);\n  };\n\n  useEffect(() => {\n    console.log(\"change\")\n    // if (selectedOne === selectedTwo) {\n    //   setDisabled(true);\n    //   cards.map(card => {\n    //     if (card === selectedOne) {\n    //       return ({...card,matched:true})\n    //     }\n    //     else{ return card }\n    //   })\n    // }\n\n  }, [selectedOne,selectedTwo]);\n\n\n  return (\n    <div className=\"container\">\n      <h1>Memory App</h1>\n      <button onClick={prepareCards}>Oyunu Ba≈ülat</button>\n\n      <div className=\"card-grid\">\n        {\n          cards.map(card => (\n            <MemoryCard \n            card={card} \n            key={card.id}\n            disabled= {disabled}\n            setSelected = {setSelected}\n            />\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}